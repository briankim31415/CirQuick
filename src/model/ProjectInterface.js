/*
 * cirquick
 * Backend for Cirquick
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.29
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {ProjectInterfaceResources} from './ProjectInterfaceResources';
import {ProjectInterfaceTransactions} from './ProjectInterfaceTransactions';

/**
 * The ProjectInterface model module.
 * @module model/ProjectInterface
 * @version 1.0.0
 */
export class ProjectInterface {
  /**
   * Constructs a new <code>ProjectInterface</code>.
   * @alias module:model/ProjectInterface
   * @class
   * @param projectId {String} 
   * @param name {String} 
   * @param description {String} 
   * @param usersJoined {Array.<String>} 
   * @param admin {String} 
   * @param resources {Object.<String, module:model/ProjectInterfaceResources>} 
   * @param currentResources {Number} 
   * @param transactions {Array.<module:model/ProjectInterfaceTransactions>} 
   */
  constructor(projectId, name, description, usersJoined, admin, resources, currentResources, transactions) {
    this.projectId = projectId;
    this.name = name;
    this.description = description;
    this.usersJoined = usersJoined;
    this.admin = admin;
    this.resources = resources;
    this.currentResources = currentResources;
    this.transactions = transactions;
  }

  /**
   * Constructs a <code>ProjectInterface</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ProjectInterface} obj Optional instance to populate.
   * @return {module:model/ProjectInterface} The populated <code>ProjectInterface</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new ProjectInterface();
      if (data.hasOwnProperty('projectId'))
        obj.projectId = ApiClient.convertToType(data['projectId'], 'String');
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('description'))
        obj.description = ApiClient.convertToType(data['description'], 'String');
      if (data.hasOwnProperty('usersJoined'))
        obj.usersJoined = ApiClient.convertToType(data['usersJoined'], ['String']);
      if (data.hasOwnProperty('admin'))
        obj.admin = ApiClient.convertToType(data['admin'], 'String');
      if (data.hasOwnProperty('resources'))
        obj.resources = ApiClient.convertToType(data['resources'], {'String': ProjectInterfaceResources});
      if (data.hasOwnProperty('currentResources'))
        obj.currentResources = ApiClient.convertToType(data['currentResources'], 'Number');
      if (data.hasOwnProperty('transactions'))
        obj.transactions = ApiClient.convertToType(data['transactions'], [ProjectInterfaceTransactions]);
    }
    return obj;
  }
}

/**
 * @member {String} projectId
 */
ProjectInterface.prototype.projectId = undefined;

/**
 * @member {String} name
 */
ProjectInterface.prototype.name = undefined;

/**
 * @member {String} description
 */
ProjectInterface.prototype.description = undefined;

/**
 * @member {Array.<String>} usersJoined
 */
ProjectInterface.prototype.usersJoined = undefined;

/**
 * @member {String} admin
 */
ProjectInterface.prototype.admin = undefined;

/**
 * @member {Object.<String, module:model/ProjectInterfaceResources>} resources
 */
ProjectInterface.prototype.resources = undefined;

/**
 * @member {Number} currentResources
 */
ProjectInterface.prototype.currentResources = undefined;

/**
 * @member {Array.<module:model/ProjectInterfaceTransactions>} transactions
 */
ProjectInterface.prototype.transactions = undefined;

