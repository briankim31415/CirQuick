/*
 * cirquick
 * Backend for Cirquick
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.29
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Cirquick);
  }
}(this, function(expect, Cirquick) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('ProjectInterface', function() {
      beforeEach(function() {
        instance = new Cirquick.ProjectInterface();
      });

      it('should create an instance of ProjectInterface', function() {
        // TODO: update the code to test ProjectInterface
        expect(instance).to.be.a(Cirquick.ProjectInterface);
      });

      it('should have the property projectId (base name: "projectId")', function() {
        // TODO: update the code to test the property projectId
        expect(instance).to.have.property('projectId');
        // expect(instance.projectId).to.be(expectedValueLiteral);
      });

      it('should have the property name (base name: "name")', function() {
        // TODO: update the code to test the property name
        expect(instance).to.have.property('name');
        // expect(instance.name).to.be(expectedValueLiteral);
      });

      it('should have the property description (base name: "description")', function() {
        // TODO: update the code to test the property description
        expect(instance).to.have.property('description');
        // expect(instance.description).to.be(expectedValueLiteral);
      });

      it('should have the property usersJoined (base name: "usersJoined")', function() {
        // TODO: update the code to test the property usersJoined
        expect(instance).to.have.property('usersJoined');
        // expect(instance.usersJoined).to.be(expectedValueLiteral);
      });

      it('should have the property admin (base name: "admin")', function() {
        // TODO: update the code to test the property admin
        expect(instance).to.have.property('admin');
        // expect(instance.admin).to.be(expectedValueLiteral);
      });

      it('should have the property resources (base name: "resources")', function() {
        // TODO: update the code to test the property resources
        expect(instance).to.have.property('resources');
        // expect(instance.resources).to.be(expectedValueLiteral);
      });

      it('should have the property currentResources (base name: "currentResources")', function() {
        // TODO: update the code to test the property currentResources
        expect(instance).to.have.property('currentResources');
        // expect(instance.currentResources).to.be(expectedValueLiteral);
      });

      it('should have the property transactions (base name: "transactions")', function() {
        // TODO: update the code to test the property transactions
        expect(instance).to.have.property('transactions');
        // expect(instance.transactions).to.be(expectedValueLiteral);
      });

    });
  });

}));
